[{"C:\\Users\\Admin\\Desktop\\snap-chap\\src\\index.js":"1","C:\\Users\\Admin\\Desktop\\snap-chap\\src\\App.js":"2","C:\\Users\\Admin\\Desktop\\snap-chap\\src\\reportWebVitals.js":"3","C:\\Users\\Admin\\Desktop\\snap-chap\\src\\WebcamCapture.js":"4","C:\\Users\\Admin\\Desktop\\snap-chap\\src\\reducer\\cameraSlice.js":"5","C:\\Users\\Admin\\Desktop\\snap-chap\\src\\reducer\\appSlice.js":"6","C:\\Users\\Admin\\Desktop\\snap-chap\\src\\Preview.js":"7","C:\\Users\\Admin\\Desktop\\snap-chap\\src\\firebase.js":"8","C:\\Users\\Admin\\Desktop\\snap-chap\\src\\Firebase.js":"9","C:\\Users\\Admin\\Desktop\\snap-chap\\src\\Chats.js":"10","C:\\Users\\Admin\\Desktop\\snap-chap\\src\\Chat.js":"11","C:\\Users\\Admin\\Desktop\\snap-chap\\src\\ChatView.js":"12","C:\\Users\\Admin\\Desktop\\snap-chap\\src\\Login.js":"13","C:\\Users\\Admin\\Desktop\\snap-chap\\src\\Message.js":"14","C:\\Users\\Admin\\Desktop\\snap-chap\\src\\ChatMessage.js":"15","C:\\Users\\Admin\\Desktop\\snap-chap\\src\\reducer\\chatSlice.js":"16"},{"size":878,"mtime":1610938788635,"results":"17","hashOfConfig":"18"},{"size":1609,"mtime":1610955023872,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"18"},{"size":1635,"mtime":1610675738300,"results":"21","hashOfConfig":"18"},{"size":481,"mtime":1610676282098,"results":"22","hashOfConfig":"18"},{"size":850,"mtime":1610618091127,"results":"23","hashOfConfig":"18"},{"size":2869,"mtime":1610872531572,"results":"24","hashOfConfig":"18"},{"size":619,"mtime":1610617250334,"results":"25","hashOfConfig":"18"},{"size":579,"mtime":1610530030787,"results":"26","hashOfConfig":"27"},{"size":2366,"mtime":1610938116996,"results":"28","hashOfConfig":"18"},{"size":1638,"mtime":1610962139079,"results":"29","hashOfConfig":"18"},{"size":1413,"mtime":1610960429607,"results":"30","hashOfConfig":"18"},{"size":955,"mtime":1610617552987,"results":"31","hashOfConfig":"18"},{"size":3490,"mtime":1610963015167,"results":"32","hashOfConfig":"18"},{"size":646,"mtime":1610960772000,"results":"33","hashOfConfig":"18"},{"size":360,"mtime":1610960420881,"results":"34","hashOfConfig":"18"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"1sylbge",{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"37"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"37"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"52","usedDeprecatedRules":"37"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"55","messages":"56","errorCount":4,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1xnioce",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"37"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"37"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"37"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"37"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"C:\\Users\\Admin\\Desktop\\snap-chap\\src\\index.js",[],["76","77"],"C:\\Users\\Admin\\Desktop\\snap-chap\\src\\App.js",["78"],"import './App.css';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport WebcamCapture from \"./WebcamCapture\";\nimport Preview from \"./Preview\";\nimport Chats from \"./Chats\";\nimport ChatView from \"./ChatView\";\nimport Message from \"./Message\";\nimport Login from \"./Login\";\nimport {useEffect} from \"react\"\nimport {auth} from \"./firebase\";\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nfunction App() {\n  const user = useSelector(state => state.appSlice.user);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    auth.onAuthStateChanged(function(authUser) {\n      if(authUser) {\n        dispatch({\n          type: 'LOGIN',\n          user: authUser.displayName,\n          profilePic: authUser.photoURL,\n          id: authUser.uid\n        })\n      } else {\n        dispatch({\n          type: 'LOGOUT',\n      })\n      }\n    });\n  }, [])\n  return (\n    <div className=\"App\">\n    <Router>\n    {!user? (\n      <Login />\n    ) : (\n      <div className=\"app__body\">\n        <div className=\"app__background\">\n          <Switch>\n            <Route  path=\"/message/:roomId\">\n              <Message />\n            </Route>\n            <Route  path=\"/chat/view\">\n              <ChatView />\n            </Route>\n            <Route  path=\"/preview\">\n              <Preview />\n            </Route>\n            <Route  path=\"/chats\">\n              <Chats />\n          </Route>\n            <Route exact path=\"/\">\n              <WebcamCapture />\n            </Route>\n          </Switch>\n        </div>  \n      </div>\n    )}    \n  </Router>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Admin\\Desktop\\snap-chap\\src\\reportWebVitals.js",[],"C:\\Users\\Admin\\Desktop\\snap-chap\\src\\WebcamCapture.js",["79","80","81"],"import React, {useRef, useCallback, useState} from 'react';\r\nimport Webcam from \"react-webcam\";\r\nimport \"./WebcamCapture.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nconst videoConstraints = {\r\n    width: 250,\r\n    height: 400,\r\n    facingMode: \"user\",\r\n};\r\n\r\nfunction WebcamCapture() {\r\n    const webcamRef = useRef(null);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const capture = useCallback(\r\n        () => {\r\n            const imageSrc = webcamRef.current.getScreenshot();\r\n            dispatch({\r\n                type: \"SET_CAMERA_IMAGE\",\r\n                imageSrc: imageSrc\r\n            });\r\n            history.push(\"/preview\");\r\n        },\r\n        [webcamRef],\r\n    )\r\n    const exitWebcam = () => {\r\n        history.push(\"/chats\")\r\n    }\r\n    return (\r\n        <div className='webcamCapture'>\r\n            <Webcam\r\n                audio={false} \r\n                height={videoConstraints.height}\r\n                ref={webcamRef}\r\n                screenshotFormat=\"image/jpeg\"\r\n                width={videoConstraints.width}\r\n                videoConstraints={videoConstraints}\r\n            />\r\n            <ExitToAppIcon className=\"webcamCapture__exit\" onClick ={exitWebcam}/>\r\n            <RadioButtonUncheckedIcon \r\n                className=\"webcamCapture__button\"\r\n                onClick ={capture}\r\n                />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WebcamCapture\r\n","C:\\Users\\Admin\\Desktop\\snap-chap\\src\\reducer\\cameraSlice.js",[],"C:\\Users\\Admin\\Desktop\\snap-chap\\src\\reducer\\appSlice.js",[],"C:\\Users\\Admin\\Desktop\\snap-chap\\src\\Preview.js",["82","83","84"],"import React, {useEffect} from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport \"./Preview.css\"\r\nimport TextFieldsIcon from '@material-ui/icons/TextFields';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport NoteIcon from '@material-ui/icons/Note';\r\nimport MusicNoteIcon from '@material-ui/icons/MusicNote';\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\nimport CropIcon from '@material-ui/icons/Crop';\r\nimport TimerIcon from '@material-ui/icons/Timer';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport {storage, db} from \"./firebase\";\r\nimport firebase from 'firebase';\r\n\r\nfunction Preview() {\r\n    const user = useSelector(state => state.appSlice.user);    \r\n    const cameraImage = useSelector(state => state.cameraSlice.cameraImage)\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        if(!cameraImage) {\r\n            history.replace(\"/\");\r\n        }\r\n    }, []);\r\n\r\n    const closePreview = () => {\r\n        dispatch({\r\n            type: \"REMOVE_CAMERA_IMAGE\",\r\n            cameraImage: null\r\n        })\r\n        history.replace('/');\r\n    }\r\n\r\n    const sendPost = () => {\r\n        const id = uuidv4();\r\n        const uploadTask = storage.\r\n        ref(`posts/${id}`)\r\n        .putString(cameraImage, \"data_url\");\r\n\r\n        uploadTask.on('state_changed', null ,function(error){\r\n            console.log(error)\r\n        },\r\n        function() {\r\n            storage\r\n            .ref(\"posts\")\r\n            .child(id)\r\n            .getDownloadURL()\r\n            .then((url) => {\r\n                db.collection(\"posts\").add({\r\n                    imageUrl: url,\r\n                    username : user.user,\r\n                    read: false,\r\n                    profilePic: user.profilePic,\r\n                    id: id,\r\n                    timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n                });\r\n                history.replace(\"/chats\")\r\n            })\r\n        }\r\n    )}\r\n    \r\n    return (\r\n        <div className=\"preview\">\r\n            <CloseIcon onClick={closePreview} className=\"preview__close\"/>\r\n            <div className=\"preview__toolbarRight\">\r\n                <TextFieldsIcon />\r\n                <CreateIcon />\r\n                <NoteIcon />\r\n                <MusicNoteIcon />\r\n                <AttachFileIcon />\r\n                <CropIcon />\r\n                <TimerIcon />\r\n            </div>\r\n            <img src={cameraImage} />\r\n            <div className=\"preview__footer\" onClick={sendPost}>\r\n                <h2>Send Now</h2>\r\n                <SendIcon fontSize=\"small\" className=\"preview__sendIcon\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preview\r\n","C:\\Users\\Admin\\Desktop\\snap-chap\\src\\firebase.js",[],"C:\\Users\\Admin\\Desktop\\snap-chap\\src\\Firebase.js",["85","86","87","88","89"],"C:\\Users\\Admin\\Desktop\\snap-chap\\src\\Chats.js",[],"C:\\Users\\Admin\\Desktop\\snap-chap\\src\\Chat.js",["90"],"import React from 'react'\r\nimport \"./Chat.css\";\r\nimport { Avatar } from '@material-ui/core';\r\nimport StopIcon from '@material-ui/icons/Stop';\r\nimport TimeAgo from 'react-timeago';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {db} from \"./firebase\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction Chat({id ,username, timestamp, imageUrl, read, profilePic}) {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const user = useSelector(state => state.appSlice.user);\r\n    const open = () => {\r\n        // if(!read) {\r\n            dispatch({\r\n                type: 'SELECT_IMG',\r\n                imageUrl: imageUrl\r\n            })\r\n\r\n            dispatch({\r\n                type: 'SET_ID_MESSAGE',\r\n                idMessage: id,\r\n            })\r\n\r\n            db.collection(\"posts\").doc(id).set(\r\n                {read: true},\r\n                {merge: true}\r\n            )\r\n            if(!read) {\r\n                history.push(\"/chat/view\");\r\n            } else {\r\n                history.push(`/message/${id}`);  \r\n            }\r\n        // }\r\n    }\r\n    return (\r\n        <div className=\"chat\" onClick={open}>\r\n           <Avatar src={profilePic} className=\"chat__avatar\" />\r\n           <div className=\"chat__info\">\r\n                <p className=\"chat__name\">{username}</p>\r\n                <p>\r\n                {!read ? \" Tap to view - \" : \" \"}\r\n                <TimeAgo date={new Date(timestamp?.toDate()).toUTCString()}/>\r\n                </p>\r\n           </div>\r\n           {!read && <StopIcon  className=\"chat_readIcon\"/>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat\r\n","C:\\Users\\Admin\\Desktop\\snap-chap\\src\\ChatView.js",["91","92","93"],"import React, {useEffect} from 'react'\r\nimport './ChatView.css';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer'\r\nfunction ChatView() {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();    \r\n    const cameraImage = useSelector(state => state.appSlice.cameraImage)\r\n    const roomId = useSelector(state => state.chatSlice.idMessage)\r\n    useEffect(() => {\r\n        if(!cameraImage) {\r\n            exit();\r\n        }\r\n    }, [cameraImage])\r\n\r\n    const exit = () => {\r\n        history.push(`/message/${roomId}`);        \r\n    }\r\n    return (\r\n        <div className=\"chatView\">\r\n            <img src={cameraImage}  onClick={exit}/>\r\n            <div className=\"chatView__timer\">\r\n            <CountdownCircleTimer\r\n            isPlaying\r\n            duration={10}\r\n            colors={[\r\n              ['#004777', 0.33],\r\n              ['#F7B801', 0.33],\r\n              ['#A30000', 0.33],\r\n            ]}\r\n            size={50}\r\n            strokenWidth={6}\r\n          >\r\n            {({ remainingTime }) => {\r\n                if(remainingTime === 0) {\r\n                    exit();\r\n                }\r\n\r\n                return remainingTime;\r\n            }}\r\n          </CountdownCircleTimer>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatView\r\n","C:\\Users\\Admin\\Desktop\\snap-chap\\src\\Login.js",["94","95"],"import React from 'react'\r\nimport \"./Login.css\";\r\nimport { Button } from '@material-ui/core';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {provider, auth} from \"./firebase\";\r\n\r\nfunction Login() {\r\n    const dispatch = useDispatch();\r\n    const user = useSelector(state => state.appSlice.user);    \r\n    const signIn = () =>{\r\n        auth.signInWithPopup(provider)\r\n        .then((result) => {\r\n            dispatch({\r\n                type: 'LOGIN',\r\n                user: result.user.displayName,\r\n                profilePic: result.user.photoURL,\r\n                id: result.user.uid\r\n            })\r\n        });\r\n    }\r\n    return (\r\n        <div class=\"login\">\r\n            <div class=\"login__container\">\r\n                <img src=\"https://www.snapchat.com/global/social-lg.jpg\" />\r\n                <Button variant=\"outline\" onClick={signIn}>Sign In</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","C:\\Users\\Admin\\Desktop\\snap-chap\\src\\Message.js",["96","97","98","99","100","101"],"import React, {useState, useEffect} from 'react'\r\nimport { Avatar } from '@material-ui/core';\r\nimport \"./Message.css\";\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CropOriginalIcon from '@material-ui/icons/CropOriginal';\r\nimport {db} from \"./firebase\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport firebase from 'firebase';\r\nimport ChatMessage from './ChatMessage';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nfunction Message() {\r\n    const userAuth = useSelector(state => state.appSlice.user);\r\n    const cameraImage = useSelector(state => state.appSlice.cameraImage);\r\n    const [valueData, setValueData] = useState([]);\r\n    const [valueImg, setvalueImg] = useState(\"\");    \r\n    const [formValue, setFormValue] = useState(\"\");\r\n    const [randomMessId, setRandomMessId] = useState(\"\");    \r\n    const history = useHistory();\r\n    const {roomId} = useParams();\r\n    useEffect(() => {\r\n        if(roomId) {\r\n            db.collection('rooms').doc(roomId)\r\n            .collection('messages').orderBy(\"createdAt\").onSnapshot(snapshot => \r\n                setValueData(\r\n                    snapshot.docs.map(doc =>({\r\n                        id: doc.id,\r\n                        data: doc.data(),\r\n                    })) \r\n                )\r\n            );\r\n        }\r\n\r\n    }, [roomId])\r\n\r\n    useEffect(() => {\r\n        if(!cameraImage) {\r\n            history.replace('/chats')\r\n        }\r\n    },[])\r\n    const closeMessage = () => {\r\n        history.replace('/chats')\r\n    }\r\n    const sendMessage = async (e) => {\r\n        e.preventDefault();\r\n        // gets name, userID and pfp of logged in user\r\n        const { profilePic, user, id } = userAuth;\r\n    \r\n        await db.collection('rooms').doc(roomId)\r\n        .collection('messages').add({\r\n          user: user,\r\n          body: formValue,\r\n          createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n          uid: id,\r\n          profilePic: profilePic\r\n        })\r\n    \r\n        // resetting form value and scrolling to bottom\r\n        setFormValue('');\r\n      }\r\n    return (\r\n        <div className=\"message\">\r\n            <div className=\"message__header\">\r\n                <Avatar src=\"\" className=\"message__avatar\"/>\r\n                <CloseIcon className=\"message__close\" onClick={closeMessage}/>\r\n            </div>\r\n\r\n            <div className=\"message__posts\">\r\n            <img src={cameraImage} alt=\"\" className=\"message__image\"/>            \r\n            {valueData.map(({id, data: {user, body, createdAt, uid, profilePic}}) => (\r\n                <ChatMessage \r\n                    key={id}\r\n                    id = {id}\r\n                    user={user}\r\n                    createdAt={createdAt}\r\n                    uid={uid}\r\n                    profilePic={profilePic}\r\n                    body={body}\r\n                />\r\n            ))}\r\n        \r\n            </div>\r\n            <form>\r\n            <div className=\"message__footer\">\r\n                <AddIcon className=\"message__icon\"/>\r\n                <CropOriginalIcon  className=\"message__icon\"/>\r\n                <input type=\"text\" className=\"message__input\" value={formValue} onChange={(e) => setFormValue(e.target.value)}/>\r\n                <SendIcon className=\"message__icon\" onClick={sendMessage}/>\r\n            </div>\r\n        </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","C:\\Users\\Admin\\Desktop\\snap-chap\\src\\ChatMessage.js",["102"],"import React from 'react'\r\nimport './ChatMessage.css'; \r\nimport { Avatar } from '@material-ui/core';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nfunction ChatMessage({id, user, createdAt, uid, profilePic, body}) {\r\n    const userAuth = useSelector(state => state.appSlice.user);\r\n    const classMessage = userAuth.id===uid ? 'ower': 'client';    \r\n    return (\r\n        <div className={`ChatMessage ${classMessage}`}>\r\n            <Avatar  src={profilePic} className=\"ChatMessage__image\"/>\r\n            <div className=\"ChatMessage__space\"></div>\r\n            <p>{body}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatMessage\r\n","C:\\Users\\Admin\\Desktop\\snap-chap\\src\\reducer\\chatSlice.js",[],{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":36,"column":6,"nodeType":"109","endLine":36,"endColumn":8,"suggestions":"110"},{"ruleId":"111","severity":1,"message":"112","line":1,"column":37,"nodeType":"113","messageId":"114","endLine":1,"endColumn":45},{"ruleId":"111","severity":1,"message":"115","line":5,"column":23,"nodeType":"113","messageId":"114","endLine":5,"endColumn":34},{"ruleId":"107","severity":1,"message":"116","line":27,"column":9,"nodeType":"109","endLine":27,"endColumn":20,"suggestions":"117"},{"ruleId":"107","severity":1,"message":"118","line":27,"column":8,"nodeType":"109","endLine":27,"endColumn":10,"suggestions":"119"},{"ruleId":"120","severity":1,"message":"121","line":39,"column":35,"nodeType":"122","messageId":"123","endLine":39,"endColumn":36,"fix":"124"},{"ruleId":"125","severity":1,"message":"126","line":77,"column":13,"nodeType":"127","endLine":77,"endColumn":38},{"ruleId":"128","severity":2,"message":"129","line":10,"column":21,"nodeType":"113","messageId":"130","endLine":10,"endColumn":29},{"ruleId":"111","severity":1,"message":"131","line":12,"column":7,"nodeType":"113","messageId":"114","endLine":12,"endColumn":11},{"ruleId":"128","severity":2,"message":"129","line":12,"column":14,"nodeType":"113","messageId":"130","endLine":12,"endColumn":22},{"ruleId":"128","severity":2,"message":"129","line":13,"column":17,"nodeType":"113","messageId":"130","endLine":13,"endColumn":25},{"ruleId":"128","severity":2,"message":"129","line":14,"column":22,"nodeType":"113","messageId":"130","endLine":14,"endColumn":30},{"ruleId":"111","severity":1,"message":"132","line":13,"column":11,"nodeType":"113","messageId":"114","endLine":13,"endColumn":15},{"ruleId":"111","severity":1,"message":"133","line":7,"column":11,"nodeType":"113","messageId":"114","endLine":7,"endColumn":19},{"ruleId":"107","severity":1,"message":"134","line":15,"column":8,"nodeType":"109","endLine":15,"endColumn":21,"suggestions":"135"},{"ruleId":"125","severity":1,"message":"126","line":22,"column":13,"nodeType":"127","endLine":22,"endColumn":53},{"ruleId":"111","severity":1,"message":"132","line":9,"column":11,"nodeType":"113","messageId":"114","endLine":9,"endColumn":15},{"ruleId":"125","severity":1,"message":"126","line":24,"column":17,"nodeType":"127","endLine":24,"endColumn":76},{"ruleId":"111","severity":1,"message":"136","line":8,"column":23,"nodeType":"113","messageId":"114","endLine":8,"endColumn":34},{"ruleId":"111","severity":1,"message":"137","line":17,"column":12,"nodeType":"113","messageId":"114","endLine":17,"endColumn":20},{"ruleId":"111","severity":1,"message":"138","line":17,"column":22,"nodeType":"113","messageId":"114","endLine":17,"endColumn":33},{"ruleId":"111","severity":1,"message":"139","line":19,"column":12,"nodeType":"113","messageId":"114","endLine":19,"endColumn":24},{"ruleId":"111","severity":1,"message":"140","line":19,"column":26,"nodeType":"113","messageId":"114","endLine":19,"endColumn":41},{"ruleId":"107","severity":1,"message":"118","line":41,"column":7,"nodeType":"109","endLine":41,"endColumn":9,"suggestions":"141"},{"ruleId":"111","severity":1,"message":"136","line":4,"column":23,"nodeType":"113","messageId":"114","endLine":4,"endColumn":34},"no-native-reassign",["142"],"no-negated-in-lhs",["143"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["144"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useSelector' is defined but never used.","React Hook useCallback has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.",["145"],"React Hook useEffect has missing dependencies: 'cameraImage' and 'history'. Either include them or remove the dependency array.",["146"],"dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"147","text":"148"},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-undef","'firebase' is not defined.","undef","'auth' is assigned a value but never used.","'user' is assigned a value but never used.","'dispatch' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'exit'. Either include it or remove the dependency array.",["149"],"'useDispatch' is defined but never used.","'valueImg' is assigned a value but never used.","'setvalueImg' is assigned a value but never used.","'randomMessId' is assigned a value but never used.","'setRandomMessId' is assigned a value but never used.",["150"],"no-global-assign","no-unsafe-negation",{"desc":"151","fix":"152"},{"desc":"153","fix":"154"},{"desc":"155","fix":"156"},[1388,1399],"\r\n        .",{"desc":"157","fix":"158"},{"desc":"155","fix":"159"},"Update the dependencies array to be: [dispatch]",{"range":"160","text":"161"},"Update the dependencies array to be: [dispatch, history]",{"range":"162","text":"163"},"Update the dependencies array to be: [cameraImage, history]",{"range":"164","text":"165"},"Update the dependencies array to be: [cameraImage, exit]",{"range":"166","text":"167"},{"range":"168","text":"165"},[879,881],"[dispatch]",[899,910],"[dispatch, history]",[1107,1109],"[cameraImage, history]",[571,584],"[cameraImage, exit]",[1547,1549]]